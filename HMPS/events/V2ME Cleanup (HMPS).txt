#
# V2ME Cleanup 1.0.3 by Bob Bobington and Dr, configured for HMPS
#
#
#
# Features:
#	
#	-Nearly invisible cleanup tag
#	-Zero performance degradation
#	-Immersion will not be ruined, player interaction with cleanup is kept to an absolute minimum
#	-Multiple stability improvements and bug fixes
#	-Easy to customize for new content
#	-Handles backend tasks (i.e. setting govflags, invention flags, etc) on a daily, monthly, or yearly tick, as needed
#	-Handles vassal interactions with one decision instead of hundreds
#	
# Notable bugs addressed:
#
#	-Ghost units and ships of non-existing nations cleaned monthly
#	-Prevent uncivs from gaining colonial states/capitals incorrectly
#	-Prevent countries with slavery outlawed from having bugged slave states
#	-Prevents existing countries from having non-existing overlords
#	-Prevents existing countries from having non-existing vassals (disabled by default, this is intended in some mods)
#
# Upcoming features (TBA):
#	-Permanent fix to craftsmen exploit/bug, without player interaction
#	-Dynamically adressing the liquidity crisis, effectively
#


country_event = {
	id = 477877787
	title = "AI: Daily Cleanup Check"
	desc = "AI: Daily Cleanup Check"
	
	is_triggered_only = yes
	
	option = {
		name = "Checking..."
		
		any_country = {
			limit = {
				exists = no
				war = yes
			}
			annex_to = FROM
		}
		
		#abolishing serfdom
		any_country = {
            limit = {
				exists = yes
                any_owned_province = { has_pop_type = serfs }
                NOT = { debt_law = serfdom }
            }
            any_owned = {
                limit = {
                    has_pop_type = serfs
                    has_pop_type = labourers
                }
                any_pop = { limit = { type = serfs } pop_type = labourers money = 1000 }
            }
            any_owned = {
                limit = {
                    has_pop_type = serfs
                    has_pop_type = farmers
                }
                any_pop = { limit = { type = serfs } pop_type = farmers money = 1000 }
            }
            any_owned = {
                limit = {
                    has_pop_type = serfs
                    NOT = { has_pop_type = farmers has_pop_type = labourers }
                }
                any_pop = { limit = { type = serfs } pop_type = farmers money = 1000 }
            }
        }
		
		#updating existing country flags
		any_country = {
			limit = {
				exists = yes
				NOT = {
					has_country_flag = existing_country
				}
			}
			set_country_flag = existing_country
		}
		any_country = {
			limit = {
				exists = no
				has_country_flag = existing_country
			}
			clr_country_flag = existing_country
		}
		
		#native assimilation cleanup
		any_country = {
            limit = {
				exists = yes
                has_country_flag = native_assimilation_enacted
                NOT = { has_country_modifier = native_assimilation_act_policy }
            }
            clr_country_flag = native_assimilation_enacted
        }
		
		#pay owed steamers
		any_country = {
			limit = {
				exists = yes
				check_variable = { which = owed_ammunition value = 5 }
				ammunition = 5
			}
			ammunition = -5
			change_variable = { which = owed_ammunition value = -5 }
		}
		any_country = {
			limit = {
				exists = yes
				check_variable = { which = owed_small_arms value = 5 }
				small_arms = 5
			}
			small_arms = -5
			change_variable = { which = owed_small_arms value = -5 }
		}
		any_country = {
			limit = {
				exists = yes
				check_variable = { which = owed_steamers value = 5 }
				steamer_convoy = 5
			}
			steamer_convoy = -5
			change_variable = { which = owed_steamers value = -5 }
		}
		any_country = {
			limit = {
				exists = yes
				check_variable = { which = owed_artillery value = 5 }
				artillery = 5
			}
			artillery = -5
			change_variable = { which = owed_artillery value = -5 }
		}
		any_country = {
			limit = {
				exists = yes
				check_variable = { which = owed_canned_food value = 5 }
				canned_food = 5
			}
			canned_food = -5
			change_variable = { which = owed_canned_food value = -5 }
		}
		any_country = {
			limit = {
				exists = yes
				check_variable = { which = owed_cash_money value = 1 }
				money = 10000
			}
			money = -10000
			change_variable = { which = owed_cash_money value = -10 }
		}
		
		CLN = { country_event = { id = 477877787 days = 1 } }
	}
}

country_event = {
	id = 477877790
	title = "AI: Monthly Cleanup Check"
	desc = "AI: Monthly Cleanup Check"
	
	is_triggered_only = yes
	
	option = {
		name = "Checking..."
		
		#applying river province notifications
		any_country = {
			limit = {
				exists = yes
			}
			any_owned = {
				limit = {
					OR = {
						### River Siene
						province_id = 415
						province_id = 416
						province_id = 2570
						province_id = 41
						province_id = 42
						province_id = 403
						province_id = 425
						province_id = 427
						province_id = 429
						province_id = 406
						province_id = 408
						
						### The Rhine
						province_id = 575
						province_id = 581
						province_id = 577
						province_id = 3265
						province_id = 578
						province_id = 575
						province_id = 574
						province_id = 570
						province_id = 571
						province_id = 409
						province_id = 410
						province_id = 587
						province_id = 586
						province_id = 604
						province_id = 603
						province_id = 569
						province_id = 2560
						province_id = 565
						province_id = 579
						province_id = 2561
						province_id = 578
						province_id = 3625
						province_id = 378
						province_id = 380
						province_id = 379
						province_id = 382
						province_id = 377
						province_id = 376
						
						
						### The Dnieper and The Daugava
						province_id = 970
						province_id = 971
						province_id = 972
						province_id = 961
						province_id = 958
						province_id = 959
						province_id = 942
						province_id = 948
						province_id = 946
						province_id = 947
						province_id = 357
						province_id = 354
						province_id = 355
						province_id = 356
						province_id = 949
						province_id = 962
						province_id = 963
						province_id = 974
						province_id = 973
						province_id = 965
						province_id = 941
						province_id = 718
						
						### The Vistula
						province_id = 690
						province_id = 693
						province_id = 691
						province_id = 694
						province_id = 700
						province_id = 710
						province_id = 708
						province_id = 706
						province_id = 709
						province_id = 711
						province_id = 713
						province_id = 715
						province_id = 716
						province_id = 705
						province_id = 714
						province_id = 716
						province_id = 703
						province_id = 714
						province_id = 2584
						
						### The Danube
						province_id = 675
						province_id = 674
						province_id = 818
						province_id = 811
						province_id = 810
						province_id = 795
						province_id = 794
						province_id = 791
						province_id = 793
						province_id = 779
						province_id = 792
						province_id = 640
						province_id = 644
						province_id = 643
						province_id = 642
						province_id = 623
						province_id = 624
						province_id = 620
						province_id = 622
						province_id = 599
						province_id = 600
						province_id = 621
						province_id = 619
						province_id = 633
						province_id = 635
						province_id = 646
						province_id = 641
						province_id = 645
						province_id = 2538
						province_id = 792
						province_id = 653
						province_id = 665
						province_id = 666
						province_id = 664
						province_id = 669
						province_id = 668
						province_id = 673
						province_id = 678
						province_id = 613
						province_id = 617
						
						### The Rhone
						province_id = 461
						province_id = 449
						province_id = 453
						province_id = 452
						province_id = 431
						province_id = 451
						province_id = 454
						province_id = 469
						province_id = 468
						province_id = 467
						
						### The Amur
						province_id = 1084
						province_id = 2617
						province_id = 1085
						province_id = 1081
						province_id = 1079
						province_id = 1002
						province_id = 1553
						province_id = 1552
						province_id = 1554
						province_id = 1083
						
						### The Yalu and The Tumen
						province_id = 1082
						province_id = 1555
						province_id = 1479
						province_id = 1620
						province_id = 1623
						province_id = 1622
						
						### The Po River
						province_id = 731
						province_id = 730
						province_id = 728
						province_id = 726
						province_id = 723
						province_id = 738
						province_id = 739
						province_id = 742
						
						### The Saint Lawrence
						province_id = 56
						province_id = 239
						province_id = 66
						province_id = 67
						province_id = 65
						province_id = 64
						province_id = 58
						
						### The Indus River
						province_id = 1288
						province_id = 1289
						province_id = 1228
						province_id = 1218
						province_id = 1223
						province_id = 1225
						province_id = 1226
						province_id = 1235
						province_id = 1224
						province_id = 1222
						province_id = 1221
						province_id = 1219
						province_id = 1217
						province_id = 1216
						province_id = 1210
						
						### The Yellow River
						province_id = 1567
						province_id = 1568
						province_id = 1564
						province_id = 1508
						province_id = 1510
						province_id = 1562
						province_id = 1559
						province_id = 2062
						province_id = 1575
						province_id = 1511
						province_id = 1515
						province_id = 1563
						province_id = 1570
						
						### The Yangtze River
						province_id = 1537
						province_id = 1544
						province_id = 2221
						province_id = 1475
						province_id = 1471
						province_id = 1549
						province_id = 1522
						province_id = 1528
						province_id = 1525
						province_id = 1521
						province_id = 1520
						province_id = 1516
						province_id = 1518
						province_id = 1470
						province_id = 1474
						province_id = 1477
						province_id = 1543
						province_id = 1541
					}
				}
				add_province_modifier = {
					name = river_notification
					duration = -1
				}
			}
		}
		
		#surpressing militancy
		any_country = {
            limit = {
				exists = yes
            }
            any_owned = {
				any_pop = {
					limit = {
						OR = {
							type = aristocrats
							type = capitalists
						}
						militancy = 8
					}
				militancy = -1
				}
			}
        }
		any_country = {
            limit = {
				exists = yes
				has_global_flag = { suppress_army_rebels }
            }
            any_owned = {
				any_pop = {
					limit = {
						type = soldiers
						militancy = 7
					}
				militancy = -1
				}
			}
        }
		
		#clean up crisis tension
		any_country = {
            limit = {
				exists = yes
                OR = {
                    NOT = { has_global_flag = revolution_n_counter_researched }
                    is_vassal = yes
                }
            }
            any_state  = { flashpoint_tension = -100 }
        }
		#make CLN unable to be interacted with by ai
		any_country = {
			limit = {
				exists = yes
			}
			relation = { who = THIS value = -400 }
		}
		
		#silver mine modifiers		#no silver in HMPS
		#any_country = {
		#	limit = {
		#		any_owned_province = {
		#			OR = {
		#				province_id = 2293
		#				province_id = 2296
		#				province_id = 312
		#				province_id = 2322
		#				province_id = 2323
		#			}
		#			trade_goods = precious_metal
		#			NOT = { has_province_modifier = silver_mine }
		#		}
		#	}
		#	any_owned = {
		#		limit = {
		#			OR = {
		#				province_id = 2293
		#				province_id = 2296
		#				province_id = 312
		#				province_id = 2322
		#				province_id = 2323
		#			}
		#			trade_goods = precious_metal
		#			NOT = { has_province_modifier = silver_mine }
		#		}
		#		add_province_modifier = { name = silver_mine duration = -1 }
		#	}
		#}
		
		#stop vassal payments
		any_country = {
			limit = {
				exists = yes
				is_vassal = yes
				overlord = { has_country_flag = vassals_dont_need_to_pay }
			}
			set_country_flag = exempt_from_vassal_contribution
		}
		
		#cleanup unciv colonies
		any_country = {
			limit = {
				civilized = no
				any_state = { is_colonial = yes }
				NOT = {
					tag = EIC
					tag = EGY
					UTI = { exists = yes }
				}
			}
			any_state = {
				limit = {
					is_colonial = yes
				}
				any_owned = {
					add_core = UTI
				}
			}
			any_owned = {
				limit = {
					is_core = UTI
				}
				secede_province = THIS
			}
			THIS = {
				any_owned = {
					limit = {
						is_core = UTI
					}
					secede_province = UTI
				}
				create_vassal = UTI
			}
			inherit = UTI
			any_owned = {
				limit = {
					is_core = UTI
				}
				remove_core = UTI
			}
		}
		
		#cleanup bugged slave states
		any_country = {
			limit = {
				any_state = { is_slave = yes }
				slavery = no_slavery
			}
			any_state = {
				limit = {
					is_slave = yes
				}
				is_slave = no
			}
		}
		
		#cleanup vassals with nonexistent overlords
		any_country = {
			limit = {
				is_vassal = yes
				exists = yes
				overlord = { exists = no }
			}
			country_event = 477877788
		}
		
		#cleanup overlords with nonexistent vassals - disabled by default
		#any_country = {
		#	limit = {
		#		is_vassal = yes
		#		exists = no
		#		overlord = { exists = yes }
		#	}
		#	country_event = 477877788
		#}
		
		#cleanup bad govflags
		any_country = {
			limit = {
				OR = {
					AND = {
						government = theocracy
						NOT = { has_country_flag = theocratic_government }
					}
					AND = {
						government = proletarian_dictatorship
						NOT = { has_country_flag = communist_gov }
					}
					AND = {
						government = absolute_monarchy
						NOT = { has_country_flag = absolute_monarchy_gov }
					}
					AND = {
						government = prussian_constitutionalism
						NOT = { has_country_flag = semi_constitutional_monarchy_gov }
					}
					AND = {
						government = hms_government
						NOT = { has_country_flag = constitutional_monarchy_gov }
					}
					AND = {
						government = presidential_dictatorship
						NOT = { has_country_flag = presidential_dictatorship_gov }
					}
					AND = {
						government = fascist_dictatorship
						NOT = { has_country_flag = fascist_gov }
					}
					AND = {
						government = bourgeois_dictatorship
						NOT = { has_country_flag = anarcho_liberal_gov }
					}
					AND = {
						government = democracy
						NOT = { has_country_flag = democracy_gov }
					}
					AND = {
						government = colonial_company
						NOT = { has_country_flag = clean_up_colonial_government }
					}
					AND = {
						government = dominion
						NOT = { has_country_flag = dominion_gov }
					}
				}
			}
			clr_country_flag = theocratic_government
			clr_country_flag = communist_gov
			clr_country_flag = absolute_monarchy_gov
			clr_country_flag = semi_constitutional_monarchy_gov
			clr_country_flag = constitutional_monarchy_gov
			clr_country_flag = presidential_dictatorship_gov
			clr_country_flag = fascist_gov
			clr_country_flag = anarcho_liberal_gov
			clr_country_flag = democracy_gov
			clr_country_flag = clean_up_colonial_government
			clr_country_flag = dominion_gov
			random_owned = {
				limit = {
					owner = {
						government = theocracy
					}
				}
				owner = { set_country_flag = theocratic_government }
			}
			random_owned = {
				limit = {
					owner = {
						government = proletarian_dictatorship
					}
				}
				owner = { set_country_flag = communist_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = absolute_monarchy
					}
				}
				owner = { set_country_flag = absolute_monarchy_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = prussian_constitutionalism
					}
				}
				owner = { set_country_flag = semi_constitutional_monarchy_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = hms_government
					}
				}
				owner = { set_country_flag = constitutional_monarchy_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = presidential_dictatorship
					}
				}
				owner = { set_country_flag = presidential_dictatorship_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = fascist_dictatorship
					}
				}
				owner = { set_country_flag = fascist_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = democracy
					}
				}
				owner = { set_country_flag = democracy_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = bourgeois_dictatorship
					}
				}
				owner = { set_country_flag = anarcho_liberal_gov }
			}
			random_owned = {
				limit = {
					owner = {
						government = colonial_company
					}
				}
				owner = { set_country_flag = clean_up_colonial_government }
			}
			random_owned = {
				limit = {
					owner = {
						government = dominion
					}
				}
				owner = { set_country_flag = dominion_gov }
			}
		}
		
		#updating flags for techs/inventions
		any_country = {
			limit = {
				medicine = 1
				NOT = { has_country_flag = medicine_invented }
			}
			set_country_flag = medicine_invented
		}
		any_country = {
			limit = {
				biologism = 1
				NOT = { has_country_flag = biologism_invented }
			}
			set_country_flag = biologism_invented
		}
		any_country = {
			limit = {
				invention = germ_theory
				NOT = { has_country_flag = germs_invented }
			}
			set_country_flag = germs_invented
		}
		any_country = {
			limit = {
				invention = gaslights
				NOT = { has_country_flag = gaslights_invented }
			}
			set_country_flag = gaslights_invented
		}
		any_country = {
			limit = {
				electricity = 1
				NOT = { has_country_flag = electricity_invented }
			}
			set_country_flag = electricity_invented
		}
		any_country = {
			limit = {
				invention = national_fraternity
				NOT = { has_country_flag = nat_frat_invented }
			}
			set_country_flag = nat_frat_invented
		}
		any_country = {
			limit = {
				revolution_n_counterrevolution = 1
				NOT = { has_country_flag = revolution_n_counter_researched }
			}
			set_country_flag = revolution_n_counter_researched
		}
		any_country = {
			limit = {
				modern_central_bank_system = 1
				NOT = { has_country_flag = modern_central_bank_system_invented }
			}
			set_country_flag = modern_central_bank_system_invented
		}
		
		#enabling crisis
		random_country = {
			limit = {
				exists = yes
				NOT = { has_global_flag = perma_disable_crises }
				NOT = { has_global_flag = revolution_n_counter_researched }
				revolution_n_counterrevolution = 1
			}
			set_global_flag = revolution_n_counter_researched
		}
		
		#ghost units monthly cleanup
		any_country = {
			limit = {
				exists = no
                is_greater_power = no
                #has_country_flag = existing_country
                capital_scope = { NOT = { province_control_days = 120 } }
                OR = {
                    is_mobilised = yes
                    total_amount_of_ships = 1
                }
			}
			annex_to = FROM
		}
		
		#remove sanctions
		any_country = {
			limit = {
				is_disarmed = yes
				has_recently_lost_war = yes
				OR = {
					has_country_modifier = kinda_bad_badboy
					has_country_modifier = bad_badboy
				}
				war = no
			}
			remove_country_modifier = kinda_bad_badboy
            remove_country_modifier = bad_badboy
		}
		
		#monthly substate payment
		#substate payment
		any_country = {
			limit = {
				exists = yes
				OR = {
					is_substate = yes
					AND = {
						is_vassal = yes
						is_substate = no
						total_pops = 250000
					}
				}
				NOT = { has_country_flag = exempt_from_vassal_contribution }
				NOT = { has_country_modifier = monthly_payment_made }
			}
			random_owned = {
				limit = {
					owner = {
						money = 1500
						NOT = { total_pops = 750000 }
					}
				}
				owner = {
					treasury = -1500
					overlord = { treasury = 1500 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 2500
						total_pops = 750000
						NOT = { total_pops = 1000000 }
					}
				}
				owner = {
					treasury = -2500
					overlord = { treasury = 2500 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 3000
						total_pops = 1000000
						NOT = { total_pops = 1250000 }
					}
				}
				owner = {
					treasury = -3000
					overlord = { treasury = 3000 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 3500
						total_pops = 1250000
						NOT = { total_pops = 1500000 }
					}
				}
				owner = {
					treasury = -3500
					overlord = { treasury = 3500 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 4000
						total_pops = 1500000
						NOT = { total_pops = 1750000 }
					}
				}
				owner = {
					treasury = -4000
					overlord = { treasury = 4000 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 4500
						total_pops = 1750000
						NOT = { total_pops = 2000000 }
					}
				}
				owner = {
					treasury = -4500
					overlord = { treasury = 4500 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 5000
						total_pops = 2000000
						NOT = { total_pops = 2250000 }
					}
				}
				owner = {
					treasury = -5000
					overlord = { treasury = 5000 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 5500
						total_pops = 2250000
						NOT = { total_pops = 2500000 }
					}
				}
				owner = {
					treasury = -5500
					overlord = { treasury = 5500 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
			random_owned = {
				limit = {
					owner = {
						money = 6000
						total_pops = 2500000
					}
				}
				owner = {
					treasury = -6000
					overlord = { treasury = 6000 }
					add_country_modifier = { name = monthly_payment_made duration = 30 }
				}
			}
		}
		
		CLN = { country_event = { id = 477877790 days = 30 } }
	}
}

country_event = {
	id = 477877791
	title = "AI: Yearly Cleanup Check"
	desc = "AI: Yearly Cleanup Check"
	
	is_triggered_only = yes
	
	option = {
		name = "Checking..."
		
		#literacy decay
		any_country = {
            limit = {
				exists = yes
            }
			any_owned = {
				#any_pop = { limit = { literacy = 0.10 } literacy = -0.001 }  #dL/dt=0.01L
				#any_pop = { limit = { literacy = 0.20 } literacy = -0.001 }
				#any_pop = { limit = { literacy = 0.30 } literacy = -0.001 }
				any_pop = { limit = { literacy = 0.40 } literacy = -0.001 }
				any_pop = { limit = { literacy = 0.50 } literacy = -0.001 }
				any_pop = { limit = { literacy = 0.60 } literacy = -0.001 }
				any_pop = { limit = { literacy = 0.70 } literacy = -0.001 }
				any_pop = { limit = { literacy = 0.80 } literacy = -0.001 }
				any_pop = { limit = { literacy = 0.90 } literacy = -0.001 }
			}
		}
		
		#remove colonial policy from non colonial nations
		any_country = {
			limit = {
				NOT = { colonial_policy = no_colonies }
				colonial_nation = no
			}
			political_reform = no_colonies
		}
		
		#updating mil gain for ottomans
		random_country = {
			limit = {
				tag = TUR
				exists = yes
				has_country_modifier = ottoman_oppression
				NOT = { has_country_modifier = religious_minority_oppression }
			}
			any_pop = {
				limit = { is_state_religion = no }
				consciousness = 1.2
				militancy = 0.6
				money = -1000
			}
			add_country_modifier = {
				name = religious_minority_oppression
				duration = 365
			}
		}
		
		#slave pop growth
		any_country = {
            limit = {
				exists = yes
                NOT = { has_country_modifier = slave_growth }
                slavery = yes_slavery
                any_owned_province = { has_pop_type = slaves NOT = { slaves = 0.75 } }
            }
            any_pop = {
                limit = { type = slaves NOT = { location = { slaves = 0.75 } } }
                random_list = {
                    10 = {}
                    10 = { reduce_pop = 1.04 }
                    10 = { reduce_pop = 1.05 }
                    10 = { reduce_pop = 1.06 }
                    10 = { reduce_pop = 1.07 }
                    10 = { reduce_pop = 1.08 }
                    10 = { reduce_pop = 1.09 }
                    10 = { reduce_pop = 1.10 }
                    10 = { reduce_pop = 1.11 }
                    10 = { reduce_pop = 1.12 }
                }
            }
            any_pop = {
                limit = { type = slaves }
                random = { chance = 10 reduce_pop = 0.97 }
            }
            any_pop = {
                limit = { type = slaves }
                random = { chance = 10 reduce_pop = 0.98 }
            }
            random_list = {
                33 = { add_country_modifier = { name = slave_growth duration = 1460 } }
                33 = { add_country_modifier = { name = slave_growth duration = 1827 } }
                33 = { add_country_modifier = { name = slave_growth duration = 2190 } }
            }
            any_pop = { limit = { type = slaves } literacy = -0.1 }
        }
		
		#upgrade rebels
		random_owned = {
			limit = {
				owner = {
					year = 1880
					NOT = { has_global_flag = rebel_tech_1850 }
				}
			}
			owner = {
				REB = {
					activate_technology = post_napoleonic_thought
					activate_technology = flintlock_rifles
					activate_technology = muzzle_loaded_rifles
					activate_technology = bronze_muzzle_loaded_artillery
					activate_technology = military_staff_system
					activate_technology = army_command_principle
				}
				set_global_flag = rebel_tech_1850
			}
		}
		random_owned = {
			limit = {
				owner = {
					year = 1900
					NOT = { has_global_flag = rebel_tech_1870 }
				}
			}
			owner = {
				set_global_flag = rebel_tech_1870
				REB = {
					activate_technology = strategic_mobility
					activate_technology = breech_loaded_rifles
					activate_technology = iron_muzzle_loaded_artillery
					activate_technology = military_plans
					activate_technology = army_professionalism
				}
			}
		}
		random_owned = {
			limit = {
				owner = {
					year = 1910
					NOT = { has_global_flag = rebel_tech_1900 }
				}
			}
			owner = {
				set_global_flag = rebel_tech_1900
				REB = {
					activate_technology = point_defense_system
					activate_technology = iron_breech_loaded_artillery
					activate_technology = army_decision_making
				}
			}
		}
		random_owned = {
			limit = {
				owner = {
					year = 1920
					NOT = { has_global_flag = rebel_tech_1920 }
				}
			}
			owner = {
				set_global_flag = rebel_tech_1920
				REB = {
					activate_technology = bolt_action_rifles
				}
			}
		}
		
		#catholic pop growth
		any_country = {
			limit = {
				NOT = {
					year = 1850
					has_country_modifier = catholic_growth
				}
				is_culture_group = american_cultures
				OR = {
					government = democracy
					has_country_flag = Government_Democracy
				}
			}
			any_pop = {
                limit = {
                    has_pop_religion = catholic
                    is_culture_group = american_cultures
                    location = { is_overseas = no }
                    NOT = {
                        has_pop_culture = texan
                        type = craftsmen
                        type = bureaucrats
                        strata = rich
                        strata = middle
                    }

                }
                random_list = {
                    15 = { reduce_pop = 1.02 }
                    35 = { reduce_pop = 1.03 }
                    45 = { reduce_pop = 1.04 }
                }
            }
            any_pop = {
                limit = {
                    has_pop_religion = catholic
                    is_culture_group = american_cultures
                    location = { is_overseas = no }
                    OR = {
                        strata = rich
                        strata = middle
                    }

                }
                random_list = {
                    20 = { reduce_pop = 1.02 }
                    35 = { reduce_pop = 1.01 }
                    40 = { reduce_pop = 1.03 }
                }
            }
            any_pop = {
                limit = {
                    has_pop_religion = catholic
                    OR = {
                        has_pop_culture = cajun
                        has_pop_culture = texan
                    }
                    NOT = { type = craftsmen }
                    location = { is_overseas = no }
                }
                random_list = {
                    40 = { reduce_pop = 1.02 }
                    30 = { reduce_pop = 1.03 }
                    25 = { reduce_pop = 1.04 }
                }
            }
            random_list = {
                33 = { add_country_modifier = { name = catholic_growth duration = 1825 } }
                33 = { add_country_modifier = { name = catholic_growth duration = 2190 } }
                33 = { add_country_modifier = { name = catholic_growth duration = 2555 } }
            }
		}
		
		CLN = { country_event = { id = 477877791 days = 365 } }
	}
}

country_event = {
	id = 477877788
	title = "Freedom!"
	desc = "We have acquired independence!"
	
	is_triggered_only = yes
	
	option = {
		name = "Nice."
		overlord = { release_vassal = THIS }
	}
}

country_event = {
	id = 477877789
	title = "AI: Cleanup Setup"
	desc = "AI: Cleanup Setup"
	
	is_triggered_only = yes
	
	option = {
		name = "Cleanup Setup"
		CLN = {
			country_event = 477877787
			country_event = 477877790
			country_event = 477877791
			add_country_modifier = { name = neutrality duration = -1 }
		}
	}
}

##vassal interactions events

country_event = {
	id = 477877792
	title = "Vassal Interactions: $FROMCOUNTRY$"
	desc = "If $FROMCOUNTRY$ is the country you want to interact with, select an option. Otherwise, select 'Next country' to cycle through, or select 'Exit options' to return to the game."
	
	is_triggered_only = yes
	
	option = {
		name = "Release this country"
		FROM = {
			country_event = 477877788
		}
		any_country = {
			limit = {
				exists = yes
				vassal_of = THIS
			}
			clr_country_flag = interacted_with
		}
	}
	
	option = {
		name = "Return cores to this country"
		any_owned = {
			limit = {
				is_core = FROM
				NOT = { is_core = THIS }
			}
			secede_province = FROM
		}
		any_country = {
			limit = {
				exists = yes
				vassal_of = THIS
			}
			clr_country_flag = interacted_with
		}
	}
	
	option = {
		name = "Next country"
		random_country = {
			limit = {
				vassal_of = THIS
				exists = yes
				NOT = { has_country_flag = interacted_with }
			}
			country_event = 477877793
			THIS = { set_country_flag = possible_interactions }
		}
		any_country = {
			limit = {
				vassal_of = THIS
				exists = yes
				THIS = { NOT = { has_country_flag = possible_interactions } }
			}
			clr_country_flag = interacted_with
		}
	}
	
	option = {
		name = "Exit options"
		any_country = {
			limit = {
				exists = yes
				vassal_of = THIS
			}
			clr_country_flag = interacted_with
		}
	}
}

country_event = {
	id = 477877793
	title = "AI: Vassal Interactions"
	desc = "This event lets your overlord interact with you. If you are a player, just close this."
	
	is_triggered_only = yes
	
	option = {
		name = "OK"
		set_country_flag = interacted_with
		FROM = { clr_country_flag = possible_interactions }
		overlord = { country_event = 477877792 }
	}
}
